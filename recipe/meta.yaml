{% set name = "array-record" %}
{% set version = "0.8.1" %}
{% set sha256 = "4150a2d8e79d30c6c89d4b47894aa4fe6e1d0135d6c7c9ac1b52733c8553ed7c" %}
# Modify BAZEL_VERSION in build.sh when updated
{% set bazel_version = "7.2.1" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/google/array_record/archive/v{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: 1
  skip: true  # [py<310]
  skip: true  # [win]

requirements:
  build:
    - python       # [target_platform != build_platform]
    - pip          # [target_platform != build_platform]
    - numpy        # [target_platform != build_platform]
    - setuptools   # [target_platform != build_platform]
    - wheel        # [target_platform != build_platform]
    - bazel {{ bazel_version }}
    - bazel-toolchain >=0.3.0
    - rsync
    - {{ compiler('c') }}
    - {{ stdlib('c') }}
    - {{ compiler('cxx') }}
  host:
    - python
    - pip
    - numpy
    - setuptools
    - wheel
  run:
    - python
    - etils
    - absl-py
    - numpy
    - more-itertools >=9.1.0
    - typing_extensions
    - importlib_resources
    - zipp
    - fsspec

test:
  imports:
    - array_record
  commands:
    - python -c "from array_record.python import array_record_data_source"
  requires:
    - pip
    - python

about:
  home: https://pypi.org/project/array-record/
  summary: ArrayRecord file format.
  description: |
    ArrayRecord is a new file format derived from [Riegeli](https://github.com/google/riegeli),
    achieving a new frontier of IO efficiency. We designed ArrayRecord to support parallel
    read, write, and random access by record index. ArrayRecord builds on top of Riegeli
    and supports the same compression algorithms.
  license: Apache-2.0
  license_family: Apache
  license_file: LICENSE
  dev_url: https://github.com/google/array_record

extra:
  recipe-maintainers:
    - iindyk
    - mtsokol
    - ehfd
